name: Deoploy Project in different jobs
on: [workflow_dispatch]
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
          - name: Get code
            uses: actions/checkout@v4
          - name: Install node
            uses: actions/setup-node@v4
            with:
              node-version: '20'
          - name: Get npm cache directory
            id: npm-cache-dir
            shell: bash
            run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          - name: Cache dependencies
            uses: actions/cache@v4
            with:
              path: ${{ steps.npm-cache-dir.outputs.dir }}
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            run: npm ci
          - name: Run lint
            run: npm run lint
          - name: Output npm cache directory
            run: echo ${{ steps.npm-cache-dir.outputs.dir }}
    test:
        needs: [lint]
        runs-on: ubuntu-latest
        steps:
          - name: Get code
            uses: actions/checkout@v4
          - name: Install node
            uses: actions/setup-node@v4
            with:
              node-version: '20'
          - name: Get npm cache directory
            id: npm-cache-dir
            shell: bash
            run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          - name: Cache dependencies
            uses: actions/cache@v4
            with:
              path: ${{ steps.npm-cache-dir.outputs.dir }}
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            run: npm ci
          - name: Run tests
            run: npm run test
    build:
        needs: [test]
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{ steps.publish-filename.outputs.script-file }}
          build-id: ${{ steps.publish-build-id.outputs.build-id }}
        steps:
          - name: Get code
            uses: actions/checkout@v4
          - name: Install node
            uses: actions/setup-node@v4
            with:
              node-version: '20'
          - name: Build number
            id: publish-build-id
            run: echo 'build-id=$GITHUB_RUN_NUMBER' >> $GITHUB_OUTPUT
          - name: Get npm cache directory
            id: npm-cache-dir
            shell: bash
            run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
          - name: Cache dependencies
            uses: actions/cache@v4
            with:
              path: ${{ steps.npm-cache-dir.outputs.dir }}
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            run: npm ci
          - name: Run build
            run: npm run build
          - name: Publish JS filename
            id: publish-filename
            run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
          - name: Upload artifacts
            uses: actions/upload-artifact@v4
            with:
              name: artifact
              path: dist
    deploy:
        needs: [lint, test, build]
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                name: artifact
            - name: Output content
              run: ls -la
            - name: Output filename
              run: echo ${{ needs.build.outputs.script-file }}
            - name: Output build-id
              run: echo ${{ needs.build.outputs.build-id }}
            - name: Deploy project
              run: echo "Deploying..."
